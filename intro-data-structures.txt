1. A line of people at an amusement park ride.

The line is composed of members, represented as strings.
There is a front to the line, as well as a back.
When someone enters the line, place them at the end.
People may leave the line whenever they see fit, and those behind them take their place.
Given the above real-world information, use an array data structure to code the following solution.

a) Use an array input: ["Vivian", "Ava", "Josh", "Patrick", "Mike"]
b) Insert a new person, "Mary" at the end of the line. In other words, you should insert Mary after Mike.

```
function addPerson (array, name){
  array.push(name);
  return array;
}

console.log(addPerson (["Vivian", "Ava", "Josh", "Patrick", "Mike"],"Mary"))
```

c) Find a person in line named "Josh." This function should return the position of 2 in the array, (recall that arrays are 0-based).

```
function findPerson(array, name){
  for (let i=0; i<array.length; i++){
    if(array[i]===name){
      return i;
    }
  }
  console.log("This person does not exist.");
  return null;
}

console.log(findPerson(["Vivian", "Ava", "Josh", "Patrick", "Mike"], "Josh"))
```

d) Find a person in line named "Emily." What should your function return if it does not find the item in the array?

```
function findPerson(array, name){
  for (let i=0; i<array.length; i++){
    if(array[i]===name){
      return i;
    }
  }
  console.log("This person does not exist.");
  return null;
}

console.log(findPerson(["Vivian", "Ava", "Josh", "Patrick", "Mike"], "Emily"))
```

e) What if Ava wants to allow a friend, "Melissa", to cut in line in front of her? How would you code this so Melissa appears before Ava?

```
function cutInLine(array,name){
  array.splice(1,0,name);
  return array;
}

console.log(cutInLine(["Vivian", "Ava", "Josh", "Patrick", "Mike"],"Melissa"))
```

f) If Patrick wants to leave the line, how would you delete him from the array?

```
function removePerson(array){
  array.splice(3,1);
  return array;
}

console.log(removePerson(["Vivian", "Ava", "Josh", "Patrick", "Mike"]))
```

2. Provide another real-world example that you can model using a data structure.

A) Family tree (trees), Stack of pancakes (stack), Standing in a line for purchasing the latest smartphone (queue)

3. How would your data structure allow developers to access and manipulate the data?

A) Data structure organizes data in different format which helps developers to sort, search, compute, and other operations.



