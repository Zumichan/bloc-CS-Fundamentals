#### Exercises

1. What are some pros and cons of using linked lists instead of arrays?

A)
Pros: Node memory independence allows linked lists to easily grow to immense sizes, while an array has limitation in the memory size. Elements have to be either moved or deleted from an array, but not with linked lists.

Cons: With linked list, it can be inefficient to access an element since it may exist anywhere in physical memory. With an array, you can access an element by index.

2. Come up with a real world example of a linked list.

A) A simple real life example is a train. Each coach is connected to its previous and next coach (Except first and last). In terms of programming, we can consider coach body as Node value and connectors as links to previous and next Nodes.

#### Programming Questions

Before beginning to code, write out a plan explaining how to solve the question.

1. The linked list push function should take a value, create a node, and add it to the end of a list. Below is pseudocode for a push function for a singly linked list. However, there is something wrong with it. Submit both an explanation of the bug and a functional implementation of the method.

2. Given an unsorted singly linked list, remove all duplicates from the linked list.
Example
Input: a -> c -> d -> d -> a
Output: a -> c -> d

3. Given an unsorted singly linked list, reverse it.
Example
Input: a -> b -> c -> d
Output: d -> c -> b -> a

